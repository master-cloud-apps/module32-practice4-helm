apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "server.name" . }}-deploy
  labels:
    app: {{ include "server.name" . }}
    chart: {{ include "server.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ include "server.name" . }}
      release: {{ .Release.Name }}
      dns-policy: enabled
  replicas: {{ .Values.server.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "server.name" . }}
        release: {{ .Release.Name }}
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: {{ .Values.global.securityContext.runAsUser | default 1001 }}
      restartPolicy: Always
      containers:
      - name: {{ include "server.name" . }}-server
        image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-rabbitmq-secret
        env:
        - name: MYSQL_HOST
          value: {{ include "mysql.service" . }}
        - name: MYSQL_DB
          value: {{ .Values.global.mysql.database }}
        - name: MYSQL_USER
          value: {{ .Values.global.mysql.root_user }}
        - name: MYSQL_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: {{ .Release.Name }}-mysql-secret
        - name: RABBITMQ_URL
          value: amqp://{{ .Values.global.rabbit.default_user }}:$(password)@{{ include "rabbitmq.service" . }}
        ports:
        - containerPort: 3000
