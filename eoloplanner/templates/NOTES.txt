1. You can access to the application: 
{{- if .Values.ingress.enabled }}
  Accessing to the next URLs:
  * Server -> http://{{ .Values.ingress.hostname }}/
  * Toposervice (don't forget pass the desired city, in this example is jaca) -> http://{{ .Values.ingress.hostname }}/toposervice/api/topographicdetails/jaca
  NOTE: in addition to having configured everything to use ingress (enable ingress, export variable with minikube ip, etc) it is necessary to modify the '/etc/hosts' file to associate the IP of minikube to the host defined in the 'ingress.hostname' values variable.
{{- else }}
  Executing the next commands:
  * For accessing server:
    export SERVER_POD_NAME=$(kubectl get pods -l "app={{ include "server.name" . }}" -o jsonpath="{.items[0].metadata.name}")
    export SERVER_CONTAINER_PORT=$(kubectl get pod $SERVER_POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
    kubectl port-forward $SERVER_POD_NAME 3000:$SERVER_CONTAINER_PORT
    Access to http://127.0.0.1:3000
  * For accessing toposervice:
    export TOPO_POD_NAME=$(kubectl get pods -l "app={{ include "toposervice.name" . }}" -o jsonpath="{.items[0].metadata.name}")
    export TOPO_CONTAINER_PORT=$(kubectl get pod $TOPO_POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
    kubectl port-forward $TOPO_POD_NAME 8080:$TOPO_CONTAINER_PORT
    Acces to next URL with the desired city, for example Madrid: http://127.0.0.1:8080/api/topographicdetails/madrid
{{- end }}
